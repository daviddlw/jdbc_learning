package com.dao;

import java.io.Serializable;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Timestamp;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.dto.Student;

public class StudentDaoImpl extends JdbcTemplate implements IStudentDao
{
	public Serializable save(final Student student)
	{
		final String sql = "INSERT INTO STUDENT (NAME, CREATETIME) VALUES (?, ?)";
		return this.template(new ICallBack<Integer>() {

			public Integer doInCallBack(Connection conn, PreparedStatement pstm, ResultSet rs) throws SQLException
			{
				pstm = conn.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
				pstm.setString(1, student.getName());
				pstm.setTimestamp(2, new Timestamp(new Date().getTime()));
				pstm.executeUpdate();
				rs = pstm.getGeneratedKeys();
				
				int autoGeneratedId =0;
				if (rs.next())
				{
					autoGeneratedId = rs.getInt(1);
					System.err.println("Id: " + autoGeneratedId);
				}
				
				return autoGeneratedId;
			}
		});
	}

	public Serializable update(final Student student)
	{
		final String sql = "UPDATE STUDENT SET NAME=? WHERE ID = ?";
		return this.template(new ICallBack<Integer>() {

			public Integer doInCallBack(Connection conn, PreparedStatement pstm, ResultSet rs) throws SQLException
			{
				pstm = conn.prepareStatement(sql);
				pstm.setString(1, student.getName());
				pstm.setInt(2, student.getId());

				return pstm.executeUpdate();
			}
		});
	}

	public Serializable delete(Serializable id)
	{
		final String sql = "DELETE FROM STUDENT WHERE ID = ?";
		final int paramId = (Integer) id;
		return this.template(new ICallBack<Integer>() {

			public Integer doInCallBack(Connection conn, PreparedStatement pstm, ResultSet rs) throws SQLException
			{
				pstm = conn.prepareStatement(sql);
				pstm.setObject(1, paramId);
				// TODO Auto-generated method stub
				return pstm.executeUpdate();
			}
		});
	}

	public Student get(final Serializable id)
	{
		final String sql = "SELECT ID, NAME FROM STUDENT WHERE ID = ?";
		return this.template(new ICallBack<Student>() {

			public Student doInCallBack(Connection conn, PreparedStatement pstm, ResultSet rs) throws SQLException
			{
				pstm = conn.prepareStatement(sql);
				pstm.setObject(1, id);
				rs = pstm.executeQuery();

				Student stu = null;
				if (rs.next())
				{
					stu = new Student();
					stu.setId(rs.getInt("ID"));
					stu.setName(rs.getString("NAME"));
				}
				// TODO Auto-generated method stub
				return stu;
			}
		});
	}

	public List<Student> findAll()
	{
		final List<Student> ls = new ArrayList<Student>();
		final String sql = "SELECT ID, NAME FROM STUDENT";
		return this.template(new ICallBack<List<Student>>() {

			public List<Student> doInCallBack(Connection conn, PreparedStatement pstm, ResultSet rs) throws SQLException
			{
				// TODO Auto-generated method stub
				pstm = conn.prepareStatement(sql);
				rs = pstm.executeQuery();
				while (rs.next())
				{
					Student stu = new Student();
					stu.setId(rs.getInt("ID"));
					stu.setName(rs.getString("NAME"));
					ls.add(stu);
				}

				return ls;
			}

		});
	}

}
